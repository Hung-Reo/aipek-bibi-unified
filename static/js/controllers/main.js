// main.js - ƒêi·ªÅu ph·ªëi v√† kh·ªüi t·∫°o ·ª©ng d·ª•ng

import { initTabs } from '/static/js/views/tabs.js';
import { getBiBiResponse } from '/static/js/controllers/api.js';
import {
    saveConversationHistory,
    loadConversationHistory,
    saveUserLevel,
    loadUserLevel
} from '/static/js/models/storage.js';
import { handleFileUpload } from '/static/js/models/file-handler.js';
import {
    appendMessage,
    showLoading,
    removeLoading,
    showNotification
} from '/static/js/views/ui.js';

// B√°o c√°o cho debug
console.log("main.js loaded");

// Kh·ªüi t·∫°o ·ª©ng d·ª•ng
document.addEventListener("DOMContentLoaded", function() {
    console.log("DOM loaded - Initializing app");
    
    // Kh·ªüi t·∫°o c√°c ph·∫ßn t·ª≠ DOM
    const chatBox = document.getElementById("chat-box");
    const userInput = document.getElementById("user-input");
    const sendBtn = document.getElementById("send-btn");
    const uploadBtn = document.getElementById("upload-btn");
    const fileUpload = document.getElementById("file-upload");
    const micBtn = document.getElementById("mic-btn");

    // Ki·ªÉm tra xem trang hi·ªán t·∫°i c√≥ c√°c ph·∫ßn t·ª≠ c·∫ßn thi·∫øt kh√¥ng
    if (!chatBox) {
        console.error("Chat box not found!");
        return;
    }

    if (!userInput || !sendBtn) {
        console.error("Input elements not found!");
        return;
    }

    // B√°o c√°o th√†nh c√¥ng t√¨m th·∫•y c√°c ph·∫ßn t·ª≠
    console.log("UI elements found");

    // Kh·ªüi t·∫°o tabs
    initTabs();

    // Kh·ªüi t·∫°o tr·∫°ng th√°i
    let conversationHistory = loadConversationHistory() || [];
    let userLevel = loadUserLevel();

    // X√°c ƒë·ªãnh tr√¨nh ƒë·ªô ng∆∞·ªùi d√πng d·ª±a tr√™n ƒë·ªô d√†i c√¢u h·ªèi
    function determineUserLevel(msg) {
        const wordCount = msg.split(/\s+/).length;
        if (wordCount <= 5) {
            return "beginner";
        } else if (wordCount <= 12) {
            return "intermediate";
        } else {
            return "advanced";
        }
    }

    // T·∫°o n·ªôi dung prompt h·ªá th·ªëng ph√π h·ª£p v·ªõi tr√¨nh ƒë·ªô ng∆∞·ªùi d√πng
    function getSystemMessageForLevel(level) {
        if (level === "beginner") {
            return "B·∫°n l√† m·ªôt tr·ª£ l√Ω AI d·∫°y ti·∫øng Anh cho h·ªçc sinh tr√¨nh ƒë·ªô s∆° c·∫•p. H√£y s·ª≠ d·ª•ng ng√¥n ng·ªØ ƒë∆°n gi·∫£n, c√¢u vƒÉn ng·∫Øn g·ªçn v√† d·ªÖ hi·ªÉu. H√£y ph·∫£n h·ªìi b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch th√¢n thi·ªán, sinh ƒë·ªông v√† s·ª≠ d·ª•ng emoji ƒë·ªÉ l√†m cho c√¢u tr·∫£ l·ªùi h·∫•p d·∫´n h∆°n. N·∫øu n·ªôi dung c√≥ h∆∞·ªõng d·∫´n ho·∫∑c danh s√°ch, h√£y tr√¨nh b√†y t·ª´ng b∆∞·ªõc m·ªôt. Sau khi gi·∫£i th√≠ch, h√£y ƒë∆∞a ra m·ªôt b√†i t·∫≠p ho·∫∑c c√¢u h·ªèi ng·∫Øn ƒë·ªÉ ki·ªÉm tra s·ª± hi·ªÉu bi·∫øt c·ªßa ng∆∞·ªùi h·ªçc. N·∫øu ng∆∞·ªùi h·ªçc tr·∫£ l·ªùi, h√£y ƒë√°nh gi√° c√¢u tr·∫£ l·ªùi ƒë√≥ ƒë√∫ng hay sai v√† gi·∫£i th√≠ch l√Ω do.";
        } else if (level === "intermediate") {
            return "B·∫°n l√† m·ªôt tr·ª£ l√Ω AI d·∫°y ti·∫øng Anh cho h·ªçc sinh tr√¨nh ƒë·ªô trung c·∫•p. H√£y gi·∫£i th√≠ch chi ti·∫øt h∆°n so v·ªõi tr√¨nh ƒë·ªô s∆° c·∫•p v√† s·ª≠ d·ª•ng t·ª´ v·ª±ng phong ph√∫ h∆°n m·ªôt ch√∫t, nh∆∞ng v·∫´n ƒë·∫£m b·∫£o d·ªÖ hi·ªÉu. H√£y ph·∫£n h·ªìi b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch th√¢n thi·ªán, sinh ƒë·ªông v√† s·ª≠ d·ª•ng emoji ƒë·ªÉ l√†m cho c√¢u tr·∫£ l·ªùi h·∫•p d·∫´n h∆°n. N·∫øu n·ªôi dung c√≥ h∆∞·ªõng d·∫´n ho·∫∑c danh s√°ch, h√£y tr√¨nh b√†y t·ª´ng b∆∞·ªõc m·ªôt. Sau khi gi·∫£i th√≠ch, h√£y ƒë∆∞a ra m·ªôt b√†i t·∫≠p ho·∫∑c c√¢u h·ªèi ng·∫Øn ƒë·ªÉ ki·ªÉm tra s·ª± hi·ªÉu bi·∫øt c·ªßa ng∆∞·ªùi h·ªçc. N·∫øu ng∆∞·ªùi h·ªçc tr·∫£ l·ªùi, h√£y ƒë√°nh gi√° c√¢u tr·∫£ l·ªùi ƒë√≥ ƒë√∫ng hay sai v√† gi·∫£i th√≠ch l√Ω do.";
        } else {
            return "B·∫°n l√† m·ªôt tr·ª£ l√Ω AI d·∫°y ti·∫øng Anh cho h·ªçc sinh tr√¨nh ƒë·ªô n√¢ng cao. H√£y ƒë∆∞a ra gi·∫£i th√≠ch chuy√™n s√¢u h∆°n v√† c√≥ th·ªÉ s·ª≠ d·ª•ng m·ªôt s·ªë thu·∫≠t ng·ªØ chuy√™n ng√†nh khi c·∫ßn thi·∫øt, nh∆∞ng v·∫´n ƒë·∫£m b·∫£o d·ªÖ hi·ªÉu. H√£y ph·∫£n h·ªìi b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch th√¢n thi·ªán, sinh ƒë·ªông v√† s·ª≠ d·ª•ng emoji ƒë·ªÉ l√†m cho c√¢u tr·∫£ l·ªùi h·∫•p d·∫´n h∆°n. N·∫øu n·ªôi dung c√≥ h∆∞·ªõng d·∫´n ho·∫∑c danh s√°ch, h√£y tr√¨nh b√†y t·ª´ng b∆∞·ªõc m·ªôt. Sau khi gi·∫£i th√≠ch, h√£y ƒë∆∞a ra m·ªôt b√†i t·∫≠p ho·∫∑c c√¢u h·ªèi ng·∫Øn ƒë·ªÉ ki·ªÉm tra s·ª± hi·ªÉu bi·∫øt c·ªßa ng∆∞·ªùi h·ªçc. N·∫øu ng∆∞·ªùi h·ªçc tr·∫£ l·ªùi, h√£y ƒë√°nh gi√° c√¢u tr·∫£ l·ªùi ƒë√≥ ƒë√∫ng hay sai v√† gi·∫£i th√≠ch l√Ω do.";
        }
    }

    // X·ª≠ l√Ω s·ª± ki·ªán g·ª≠i tin nh·∫Øn
    sendBtn.addEventListener("click", async () => {
        const message = userInput.value.trim();
        if (message) {
            appendMessage("user", message);
            userInput.value = "";
            
            // Ki·ªÉm tra v√† thi·∫øt l·∫≠p tr√¨nh ƒë·ªô ng∆∞·ªùi d√πng l·∫ßn ƒë·∫ßu
            if (!userLevel) {
                const normalizedMsg = message.toLowerCase();
                if (normalizedMsg.includes("s∆° c·∫•p") || normalizedMsg === "1" || normalizedMsg.includes("beginner")) {
                    userLevel = "beginner";
                } else if (normalizedMsg.includes("trung c·∫•p") || normalizedMsg === "2" || normalizedMsg.includes("intermediate")) {
                    userLevel = "intermediate";
                } else if (normalizedMsg.includes("n√¢ng cao") || normalizedMsg === "3" || normalizedMsg.includes("advanced")) {
                    userLevel = "advanced";
                } else {
                    userLevel = determineUserLevel(message);
                }
                
                // L∆∞u tr√¨nh ƒë·ªô ng∆∞·ªùi d√πng
                saveUserLevel(userLevel);
                
                // Th√™m tin nh·∫Øn h·ªá th·ªëng ph√π h·ª£p v·ªõi tr√¨nh ƒë·ªô
                conversationHistory = [{ role: "system", content: getSystemMessageForLevel(userLevel) }];

                if (normalizedMsg === "1" || normalizedMsg === "2" || normalizedMsg === "3" ||
                    normalizedMsg.includes("ti·ªÉu h·ªçc") || normalizedMsg.includes("thcs") ||
                    normalizedMsg.includes("thpt") || normalizedMsg.includes("beginner") ||
                    normalizedMsg.includes("intermediate") || normalizedMsg.includes("advanced")) {
                    
                    const levelName = userLevel === "beginner" ? "Ti·ªÉu h·ªçc" : (userLevel === "intermediate" ? "THCS" : "THPT");
                    appendMessage("bibi", `ƒê√£ thi·∫øt l·∫≠p tr√¨nh ƒë·ªô ti·∫øng Anh ${levelName}. B·∫°n h√£y ƒë·∫∑t c√¢u h·ªèi ƒë·ªÉ b·∫Øt ƒë·∫ßu nh√©! üòä`);
                    return; // ch·ªù ng∆∞·ªùi d√πng ƒë·∫∑t c√¢u h·ªèi ti·∫øp theo
                } else {
                    // Ng∆∞·ªùi d√πng kh√¥ng ch·ªçn m·ª©c c·ª• th·ªÉ, ƒë√£ t·ª± x√°c ƒë·ªãnh v√† th√™m tin nh·∫Øn ng∆∞·ªùi d√πng v√†o l·ªãch s·ª≠
                    conversationHistory.push({ role: "user", content: message });
                }
            } else {
                // ƒê√£ c√≥ tr√¨nh ƒë·ªô ng∆∞·ªùi d√πng -> th√™m tin nh·∫Øn ng∆∞·ªùi d√πng v√†o l·ªãch s·ª≠
                conversationHistory.push({ role: "user", content: message });
            }

            // Hi·ªÉn th·ªã tr·∫°ng th√°i ƒëang t√¨m c√¢u tr·∫£ l·ªùi
            const loadingDiv = showLoading();

            try {
                const reply = await getBiBiResponse(conversationHistory);
                
                // X√≥a th√¥ng b√°o "ƒëang t√¨m c√¢u tr·∫£ l·ªùi"
                removeLoading(loadingDiv);
                
                // Th√™m ph·∫£n h·ªìi c·ªßa AI v√†o l·ªãch s·ª≠
                conversationHistory.push({ role: "assistant", content: reply });
                
                // L∆∞u l·ªãch s·ª≠ h·ªôi tho·∫°i
                saveConversationHistory(conversationHistory);
                
                // Ki·ªÉm tra ƒë√°p √°n ƒë√∫ng/sai trong ph·∫£n h·ªìi
                let feedbackClass = "";
                const replyLower = reply.trim().toLowerCase();
                if (replyLower.startsWith("ƒë√∫ng") || replyLower.startsWith("ch√≠nh x√°c") ||
                    replyLower.startsWith("b·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng") || replyLower.startsWith("ho√†n to√†n ch√≠nh x√°c")) {
                    feedbackClass = "correct-answer";
                } else if (replyLower.startsWith("sai") || replyLower.startsWith("ch∆∞a") ||
                           replyLower.startsWith("kh√¥ng ƒë√∫ng") || replyLower.startsWith("r·∫•t ti·∫øc")) {
                    feedbackClass = "wrong-answer";
                }
                
                // Hi·ªÉn th·ªã tin nh·∫Øn ph·∫£n h·ªìi c·ªßa AI (k√®m ƒë·ªãnh d·∫°ng ƒë√∫ng/sai n·∫øu c√≥)
                appendMessage("bibi", reply, feedbackClass);
            } catch (error) {
                console.error("L·ªói khi l·∫•y ph·∫£n h·ªìi:", error);
                removeLoading(loadingDiv);
                appendMessage("bibi", "Xin l·ªói, c√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω y√™u c·∫ßu c·ªßa b·∫°n. Vui l√≤ng th·ª≠ l·∫°i sau.");
            }
        }
    });

    // G·ª≠i tin khi nh·∫•n Enter
    userInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter") {
            sendBtn.click();
        }
    });

    // Tin nh·∫Øn ch√†o m·ª´ng ban ƒë·∫ßu (ch·ªâ hi·ªÉn th·ªã n·∫øu kh√¥ng c√≥ l·ªãch s·ª≠)
    if (conversationHistory.length === 0) {
        appendMessage("bibi", "Ch√†o b·∫°n! üëã Tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu, h√£y ch·ªçn tr√¨nh ƒë·ªô ti·∫øng Anh c·ªßa b·∫°n (nh·∫≠p 1 - Ti·ªÉu h·ªçc, 2 - THCS, 3 - THPT) ho·∫∑c c·ª© ƒë·∫∑t c√¢u h·ªèi v√† t√¥i s·∫Ω t·ª± ƒë√°nh gi√° nh√©.");
    } else {
        // Hi·ªÉn th·ªã l·∫°i l·ªãch s·ª≠ h·ªôi tho·∫°i n·∫øu c√≥
        conversationHistory.forEach(msg => {
            if (msg.role === 'user') {
                appendMessage('user', msg.content);
            } else if (msg.role === 'assistant') {
                let feedbackClass = "";
                const replyLower = msg.content.trim().toLowerCase();
                if (replyLower.startsWith("ƒë√∫ng") || replyLower.startsWith("ch√≠nh x√°c")) {
                    feedbackClass = "correct-answer";
                } else if (replyLower.startsWith("sai") || replyLower.startsWith("ch∆∞a") || replyLower.startsWith("kh√¥ng ƒë√∫ng")) {
                    feedbackClass = "wrong-answer";
                }
                appendMessage('bibi', msg.content, feedbackClass);
            }
        });
    }
});